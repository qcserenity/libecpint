<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structlibecpint_1_1_two_index" kind="struct" language="C++" prot="public">
    <compoundname>libecpint::TwoIndex</compoundname>
    <includes refid="multiarr_8hpp" local="no">multiarr.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structlibecpint_1_1_two_index_1a713cd82eaf61abc07a21c0bc07547121" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int libecpint::TwoIndex&lt; T &gt;::dims[2]</definition>
        <argsstring>[2]</argsstring>
        <name>dims</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" line="72" column="1" bodyfile="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structlibecpint_1_1_two_index_1aeac1fc5f3983b9741fa4c7e5d8f6a7da" prot="public" static="no" mutable="no">
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; libecpint::TwoIndex&lt; T &gt;::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" line="73" column="1" bodyfile="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structlibecpint_1_1_two_index_1a7e8a865f087c1c207300c35cbaec2cd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; libecpint::TwoIndex&lt; T &gt;::operator()</definition>
        <argsstring>(int i, int j)</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" line="74" column="1" bodyfile="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structlibecpint_1_1_two_index_1aa7c4691a9cd0064001345a0011481a93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T libecpint::TwoIndex&lt; T &gt;::operator()</definition>
        <argsstring>(int i, int j) const</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" line="75" column="1" bodyfile="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structlibecpint_1_1_two_index_1a44b5fe46251bc63db296a718d4f47506" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::TwoIndex&lt; T &gt;::assign</definition>
        <argsstring>(int dim1, int dim2, T value)</argsstring>
        <name>assign</name>
        <param>
          <type>int</type>
          <declname>dim1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim2</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" line="76" column="1" bodyfile="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structlibecpint_1_1_two_index_1af9dec10df263e5438733ea4e79a45049" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; T &gt;</type>
        <definition>TwoIndex&lt;T&gt; libecpint::TwoIndex&lt; T &gt;::transpose</definition>
        <argsstring>()</argsstring>
        <name>transpose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" line="81" column="1" bodyfile="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" bodystart="81" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="structlibecpint_1_1_two_index_1a695ab1652f3d10e10fb0ff24fea73ff5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::TwoIndex&lt; T &gt;::add</definition>
        <argsstring>(const TwoIndex&lt; T &gt; &amp;other)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" line="89" column="1" bodyfile="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structlibecpint_1_1_two_index_1a0a5720cd6f2359f67763770838763cca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void libecpint::TwoIndex&lt; T &gt;::multiply</definition>
        <argsstring>(T k)</argsstring>
        <name>multiply</name>
        <param>
          <type>T</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" line="93" column="1" bodyfile="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structlibecpint_1_1_two_index_1ad667a1f8799d28687061bd15f4bb7b4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>libecpint::TwoIndex&lt; T &gt;::TwoIndex</definition>
        <argsstring>()</argsstring>
        <name>TwoIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" line="96" column="1" bodyfile="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structlibecpint_1_1_two_index_1a52c49884c0e3039e00c454622b18674d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>libecpint::TwoIndex&lt; T &gt;::TwoIndex</definition>
        <argsstring>(int dim1, int dim2)</argsstring>
        <name>TwoIndex</name>
        <param>
          <type>int</type>
          <declname>dim1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" line="97" column="1" bodyfile="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="structlibecpint_1_1_two_index_1a8f8e7c63baad71925c70838b0313c750" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>libecpint::TwoIndex&lt; T &gt;::TwoIndex</definition>
        <argsstring>(int dim1, int dim2, T value)</argsstring>
        <name>TwoIndex</name>
        <param>
          <type>int</type>
          <declname>dim1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim2</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" line="101" column="1" bodyfile="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structlibecpint_1_1_two_index_1ad713c361649d3d45091e64f2865afb64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>libecpint::TwoIndex&lt; T &gt;::TwoIndex</definition>
        <argsstring>(const TwoIndex&lt; T &gt; &amp;other)</argsstring>
        <name>TwoIndex</name>
        <param>
          <type>const <ref refid="structlibecpint_1_1_two_index" kindref="compound">TwoIndex</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" line="102" column="1" bodyfile="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" bodystart="102" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Templated skeleton two index array for convenience. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" line="71" column="1" bodyfile="/Users/robertshaw/devfiles/libecpint_new/include/libecpint/multiarr.hpp" bodystart="71" bodyend="106"/>
    <listofallmembers>
      <member refid="structlibecpint_1_1_two_index_1a695ab1652f3d10e10fb0ff24fea73ff5" prot="public" virt="non-virtual"><scope>libecpint::TwoIndex</scope><name>add</name></member>
      <member refid="structlibecpint_1_1_two_index_1a44b5fe46251bc63db296a718d4f47506" prot="public" virt="non-virtual"><scope>libecpint::TwoIndex</scope><name>assign</name></member>
      <member refid="structlibecpint_1_1_two_index_1aeac1fc5f3983b9741fa4c7e5d8f6a7da" prot="public" virt="non-virtual"><scope>libecpint::TwoIndex</scope><name>data</name></member>
      <member refid="structlibecpint_1_1_two_index_1a713cd82eaf61abc07a21c0bc07547121" prot="public" virt="non-virtual"><scope>libecpint::TwoIndex</scope><name>dims</name></member>
      <member refid="structlibecpint_1_1_two_index_1a0a5720cd6f2359f67763770838763cca" prot="public" virt="non-virtual"><scope>libecpint::TwoIndex</scope><name>multiply</name></member>
      <member refid="structlibecpint_1_1_two_index_1a7e8a865f087c1c207300c35cbaec2cd4" prot="public" virt="non-virtual"><scope>libecpint::TwoIndex</scope><name>operator()</name></member>
      <member refid="structlibecpint_1_1_two_index_1aa7c4691a9cd0064001345a0011481a93" prot="public" virt="non-virtual"><scope>libecpint::TwoIndex</scope><name>operator()</name></member>
      <member refid="structlibecpint_1_1_two_index_1af9dec10df263e5438733ea4e79a45049" prot="public" virt="non-virtual"><scope>libecpint::TwoIndex</scope><name>transpose</name></member>
      <member refid="structlibecpint_1_1_two_index_1ad667a1f8799d28687061bd15f4bb7b4b" prot="public" virt="non-virtual"><scope>libecpint::TwoIndex</scope><name>TwoIndex</name></member>
      <member refid="structlibecpint_1_1_two_index_1a52c49884c0e3039e00c454622b18674d" prot="public" virt="non-virtual"><scope>libecpint::TwoIndex</scope><name>TwoIndex</name></member>
      <member refid="structlibecpint_1_1_two_index_1a8f8e7c63baad71925c70838b0313c750" prot="public" virt="non-virtual"><scope>libecpint::TwoIndex</scope><name>TwoIndex</name></member>
      <member refid="structlibecpint_1_1_two_index_1ad713c361649d3d45091e64f2865afb64" prot="public" virt="non-virtual"><scope>libecpint::TwoIndex</scope><name>TwoIndex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
